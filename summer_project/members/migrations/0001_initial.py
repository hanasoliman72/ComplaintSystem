# Generated by Django 5.2.5 on 2025-08-14 16:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                ("DepartmentId", models.AutoField(primary_key=True, serialize=False)),
                ("DepartmentName", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("UserId", models.AutoField(primary_key=True, serialize=False)),
                ("Name", models.CharField(max_length=255)),
                ("GPA", models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "Role",
                    models.CharField(
                        choices=[
                            ("Student", "Student"),
                            ("GeneralManager", "General Manager"),
                            ("DepartmentManager", "Department Manager"),
                        ],
                        default="Student",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "DepartmentId",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="members.department",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ChatbotSession",
            fields=[
                ("SessionId", models.AutoField(primary_key=True, serialize=False)),
                ("SessionStart", models.DateTimeField(auto_now_add=True)),
                ("SessionEnd", models.DateTimeField(blank=True, null=True)),
                (
                    "UserId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Complaint",
            fields=[
                ("ComplaintId", models.AutoField(primary_key=True, serialize=False)),
                (
                    "TrackingCode",
                    models.CharField(blank=True, max_length=100, unique=True),
                ),
                (
                    "Type",
                    models.CharField(
                        choices=[
                            ("Complaint", "Complaint"),
                            ("Suggestion", "Suggestion"),
                        ],
                        max_length=20,
                    ),
                ),
                ("Title", models.CharField(max_length=255)),
                ("Description", models.TextField()),
                (
                    "Status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In Review", "In Review"),
                            ("Resolved", "Resolved"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                ("CreatedDate", models.DateTimeField(auto_now_add=True)),
                (
                    "DepartmentId",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="complaints",
                        to="members.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Response",
            fields=[
                ("ResponseId", models.AutoField(primary_key=True, serialize=False)),
                ("Message", models.TextField()),
                ("ResponseDate", models.DateTimeField(auto_now_add=True)),
                (
                    "ComplaintId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="members.complaint",
                    ),
                ),
                (
                    "SenderId",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="responses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
